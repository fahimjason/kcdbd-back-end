version: "3.9"
services:
  # Frontend =======================
  # client:
  #   container_name: client
  #   # Build the Dockerfile from the current directory
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   # Expose port 3000
  #   ports:
  #     - "3001:3000"
  #   # Volumes for hot-reloading
  #   volumes:
  #     - ./client:/app
  #     - /app/node_modules
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #     - REACT_APP_URL=http://54.227.58.190:5002/api/v1
  #     - JAEGER_URL=http://jaeger:4318
  #   depends_on:
  #     - mongodb
  #     - backend
  #   restart: always

  # Backend ======================
  backend:
    container_name: backend
    # Build the Dockerfile from the current directory
    build:
      context: ./
      dockerfile: Dockerfile
    # Expose port 3000
    ports:
      - "5002:5000"
    # Volumes for hot-reloading
    volumes:
      - ./:/app
      - /app/node_modules
    environment:
      # NODE_OPTIONS: "--require ./tracer.js"
      MONGO_URI: ${MONGO_URI} 
      DB_NAME: ${DB_NAME}
      FILE_UPLOAD_PATH: ${FILE_UPLOAD_PATH}
      MAX_FILE_UPLOAD: ${MAX_FILE_UPLOAD}

      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      JWT_COOKIE_EXPIRE: ${JWT_COOKIE_EXPIRE}

      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_EMAIL: ${SMTP_EMAIL}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      FROM_EMAIL: ${FROM_EMAIL}
      FROM_NAME: ${FROM_NAME}

      PAYMENT_API: ${PAYMENT_API}
      PAYMENT_API_SANDBOX: ${PAYMENT_API_SANDBOX}
      PAYMENT_API_LIVE: ${PAYMENT_API_LIVE}
      PAYMENT_STORE_ID: ${PAYMENT_STORE_ID}
      PAYMENT_SIGNATURE_KEY: ${PAYMENT_SIGNATURE_KEY}
      PAYMENT_SUCCESS_URL: ${PAYMENT_SUCCESS_URL}
      PAYMENT_FAIL_URL: ${PAYMENT_FAIL_URL}
      PAYMENT_CANCEL_URL: ${PAYMENT_CANCEL_URL}
    depends_on:
      - mongodb
    restart: always

  # Database ====================
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27018:27017"
    volumes:
      - ./data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    restart: always
  
  # # MySQL Database
  # mariadb:
  #   image: mariadb:latest
  #   container_name: mariadb
  #   ports:
  #     - "33066:3306"
  #   environment:
  #     MYSQL_ROOT_PASSWORD: cphr1AOtimmmscw6jKPc
  #     MYSQL_USER: oninjas
  #     MYSQL_PASSWORD: cphr1AOtimmmscw6jKPc
  #     MYSQL_DATABASE: ninjas
  #   volumes:
  #     - db_data:/var/lib/mysql
  #   restart: always

# Docker Network
## docker network create microservices
# networks:
#   default:
#     external:
#       name: microservices